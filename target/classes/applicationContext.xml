<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

    <context:property-placeholder ignore-unresolvable="true" local-override="true"
                                  location="classpath*:/application.properties"/>
<!--  
    <util:properties id="APP_PROPERTIES" location="classpath:application.properties" local-override="true"/>
-->

   <bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>classpath*:/application.properties</value>
					<!-- 其他模块也需要定义类似属性时，可以使用
					<value>/WEB-INF/conf/plugin/**/application-*.properties</value>
				    -->
				</list>
			</property>
   </bean>

   <bean id="property" class="com.me.bootstrap.util.Property">
		<property name="properties" ref="properties"/>
   </bean>
   
   <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="${messageSource.cacheSeconds}"/>	
		<property name="fallbackToSystemLocale" value="false"/>
		<property name="basenames" value="#{property.getList('messageSource.basenames.')}"/>
	</bean>





    <!-- 数据源配置, 使用DBCP数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}">
		</property>
		<!-- <property name="defaultAutoCommit" value="false"></property> -->
		<property name="jdbcUrl" value="${jdbc.url}">
		</property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
        <property name="maxStatements" value="${jdbc.maxStatements}"></property>
        <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>
        <property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"></property>
        <property name="testConnectionOnCheckin" value="${jdbc.testConnectionOnCheckin}"></property>
        <property name="automaticTestTable" value="${jdbc.automaticTestTable}"></property>
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"></property>
        <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"></property>
	</bean>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 
    <context:component-scan base-package="com.me.bootstrap">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    -->
   <context:component-scan base-package="com.me.bootstrap.**.impl,com.me.bootstrap.querydsl"></context:component-scan>
    
    
    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="com.me.bootstrap.entity"/>
         <property name="jpaProperties">  
           <props> 
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                 <!-- 
                 <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>
                 <prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate-local.xml</prop>
                 -->
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                
                 <!-- 抓取策略 -->
				<prop key="hibernate.max_fetch_depth">1</prop>
				<prop key="hibernate.default_batch_fetch_size ">4</prop>
				<prop key="hibernate.jdbc.fetch_size">30</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
              </props>
         </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.me.bootstrap.dao" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>
   
    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!--   -->
    
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseSchemaUpdate" value="true"/>
        <property name="jobExecutorActivate" value="false"/>
        <property name="history" value="full"/>
        <property name="processDefinitionCacheLimit" value="10"/>
   
        
        <property name="activityFontName" value="宋体"/>
        <property name="labelFontName" value="宋体"/>
   
      
        <property name="processDefinitionCache">
            <bean class="com.me.bootstrap.activiti.cache.DistributedCache" />
        </property>

    
        <property name="deploymentResources">
            <list>
                <value>classpath*:/deployments/*</value>
            </list>
        </property>
     
        
        <property name="customFormTypes">
            <list>
                <bean class="com.me.bootstrap.activiti.form.UsersFormType"/>
            </list>
        </property>
         
    </bean>
   
    
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
  
    <!-- Activiti end -->
</beans>
